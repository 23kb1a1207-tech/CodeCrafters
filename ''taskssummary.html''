
import React from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Link } from "react-router-dom";
import { createPageUrl } from "@/utils";
import { CheckCircle, Clock, ArrowUpCircle, Plus, ExternalLink } from "lucide-react";
import { Skeleton } from "@/components/ui/skeleton";
import { format } from "date-fns";

export default function TasksSummary({ tasks, isLoading }) {
  const recentTasks = tasks.slice(0, 5);
  
  const priorityColors = {
    low: "bg-blue-100 text-blue-800",
    medium: "bg-yellow-100 text-yellow-800", 
    high: "bg-red-100 text-red-800"
  };

  const statusIcons = {
    todo: <Clock className="w-4 h-4 text-gray-400" />,
    in_progress: <ArrowUpCircle className="w-4 h-4 text-blue-500" />,
    done: <CheckCircle className="w-4 h-4 text-green-500" />
  };

  return (
    <Card className="bg-white/80 backdrop-blur-sm border border-white/20 shadow-lg">
      <CardHeader>
        <div className="flex justify-between items-center">
          <CardTitle className="text-xl font-bold">Recent Tasks</CardTitle>
          <Link to={createPageUrl("Tasks")}>
            <Button variant="outline" size="sm">
              <ExternalLink className="w-4 h-4 mr-2" />
              View All
            </Button>
          </Link>
        </div>
      </CardHeader>
      <CardContent>
        {isLoading ? (
          <div className="space-y-4">
            {Array(3).fill(0).map((_, i) => (
              <div key={i} className="p-4 border border-gray-200 rounded-lg">
                <Skeleton className="h-4 w-3/4 mb-2" />
                <Skeleton className="h-3 w-1/2" />
              </div>
            ))}
          </div>
        ) : recentTasks.length > 0 ? (
          <div className="space-y-3">
            {recentTasks.map((task) => (
              <div key={task.id} className="p-4 border border-gray-200 rounded-lg hover:shadow-md transition-shadow">
                <div className="flex items-start justify-between">
                  <div className="flex items-start gap-3 flex-1">
                    {statusIcons[task.status]}
                    <div className="flex-1">
                      <h4 className={`font-medium ${task.status === 'done' ? 'line-through text-gray-500' : 'text-gray-900'}`}>
                        {task.title}
                      </h4>
                      <div className="flex gap-2 mt-2">
                        <Badge className={priorityColors[task.priority]}>
                          {task.priority}
                        </Badge>
                        {task.due_date && (
                          <Badge variant="outline">
                            Due: {format(new Date(task.due_date), 'MMM d')}
                          </Badge>
                        )}
                        {task.estimated_cost > 0 && (
                          <Badge variant="outline" className="text-green-600">
                            â‚¹{task.estimated_cost}
                          </Badge>
                        )}
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            ))}
          </div>
        ) : (
          <div className="text-center py-8">
            <Clock className="w-12 h-12 text-gray-300 mx-auto mb-4" />
            <p className="text-gray-500 mb-4">No tasks yet</p>
            <Link to={createPageUrl("Tasks")}>
              <Button>
                <Plus className="w-4 h-4 mr-2" />
                Create Your First Task
              </Button>
            </Link>
          </div>
        )}
      </CardContent>
    </Card>
  );
}
