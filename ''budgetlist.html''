
import React from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table";
import { TrendingUp, TrendingDown, Target, Pencil } from "lucide-react";
import { format } from "date-fns";

export default function BudgetList({ budgetEntries, onEdit }) {
  const typeIcons = {
    income: <TrendingUp className="w-4 h-4 text-green-500" />,
    expense: <TrendingDown className="w-4 h-4 text-red-500" />,
    budget_limit: <Target className="w-4 h-4 text-blue-500" />
  };

  const typeColors = {
    income: "bg-green-100 text-green-800",
    expense: "bg-red-100 text-red-800", 
    budget_limit: "bg-blue-100 text-blue-800"
  };

  return (
    <Card className="bg-white/80 backdrop-blur-sm border border-white/20">
      <CardHeader>
        <CardTitle>Recent Entries</CardTitle>
      </CardHeader>
      <CardContent>
        <div className="overflow-x-auto">
          <Table>
            <TableHeader>
              <TableRow>
                <TableHead>Title</TableHead>
                <TableHead>Type</TableHead>
                <TableHead>Category</TableHead>
                <TableHead>Amount</TableHead>
                <TableHead>Date</TableHead>
                <TableHead>Actions</TableHead>
              </TableRow>
            </TableHeader>
            <TableBody>
              {budgetEntries.slice(0, 10).map((entry) => (
                <TableRow key={entry.id} className="hover:bg-gray-50/50">
                  <TableCell>
                    <div>
                      <p className="font-medium">{entry.title}</p>
                      {entry.description && (
                        <p className="text-sm text-gray-500">{entry.description}</p>
                      )}
                    </div>
                  </TableCell>
                  <TableCell>
                    <Badge className={typeColors[entry.type]} variant="secondary">
                      <div className="flex items-center gap-1">
                        {typeIcons[entry.type]}
                        {entry.type.replace('_', ' ')}
                      </div>
                    </Badge>
                  </TableCell>
                  <TableCell>
                    <span className="capitalize">{entry.category.replace('_', ' ')}</span>
                  </TableCell>
                  <TableCell>
                    <span className={`font-semibold ${
                      entry.type === 'income' ? 'text-green-600' : 
                      entry.type === 'expense' ? 'text-red-600' : 'text-blue-600'
                    }`}>
                      â‚¹{entry.amount.toFixed(2)}
                    </span>
                  </TableCell>
                  <TableCell>
                    {format(new Date(entry.date), 'MMM d, yyyy')}
                  </TableCell>
                  <TableCell>
                    <Button
                      variant="ghost"
                      size="icon"
                      onClick={() => onEdit(entry)}
                    >
                      <Pencil className="w-4 h-4" />
                    </Button>
                  </TableCell>
                </TableRow>
              ))}
              {budgetEntries.length === 0 && (
                <TableRow>
                  <TableCell colSpan={6} className="text-center py-8 text-gray-500">
                    No budget entries yet. Add your first entry to get started!
                  </TableCell>
                </TableRow>
              )}
            </TableBody>
          </Table>
        </div>
      </CardContent>
    </Card>
  );
}
