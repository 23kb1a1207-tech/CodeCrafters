
import React from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Progress } from "@/components/ui/progress";
import { Badge } from "@/components/ui/badge";
import { AlertTriangle, CheckCircle, Target } from "lucide-react";

export default function CategoryLimits({ budgetEntries }) {
  const currentMonth = new Date().getMonth();
  const currentYear = new Date().getFullYear();
  
  const thisMonthEntries = budgetEntries.filter(entry => {
    const entryDate = new Date(entry.date);
    return entryDate.getMonth() === currentMonth && entryDate.getFullYear() === currentYear;
  });

  const budgetLimits = {};
  const actualSpending = {};

  thisMonthEntries.forEach(entry => {
    if (entry.type === "budget_limit") {
      budgetLimits[entry.category] = entry.amount;
    } else if (entry.type === "expense") {
      actualSpending[entry.category] = (actualSpending[entry.category] || 0) + entry.amount;
    }
  });

  const categoryData = Object.keys(budgetLimits).map(category => {
    const limit = budgetLimits[category];
    const spent = actualSpending[category] || 0;
    const percentage = limit > 0 ? (spent / limit) * 100 : 0;
    const isOverLimit = percentage > 100;

    return {
      category,
      limit,
      spent,
      percentage,
      isOverLimit
    };
  });

  return (
    <Card className="bg-white/80 backdrop-blur-sm border border-white/20">
      <CardHeader>
        <CardTitle>Category Budgets</CardTitle>
      </CardHeader>
      <CardContent>
        {categoryData.length > 0 ? (
          <div className="space-y-6">
            {categoryData.map((data) => (
              <div key={data.category} className="space-y-2">
                <div className="flex justify-between items-center">
                  <span className="font-medium capitalize">{data.category.replace('_', ' ')}</span>
                  {data.isOverLimit ? (
                    <Badge variant="destructive" className="text-xs">
                      <AlertTriangle className="w-3 h-3 mr-1" />
                      Over Limit
                    </Badge>
                  ) : (
                    <Badge variant="outline" className="text-xs">
                      <CheckCircle className="w-3 h-3 mr-1" />
                      On Track
                    </Badge>
                  )}
                </div>
                <Progress 
                  value={Math.min(data.percentage, 100)} 
                  className={`h-2 ${data.isOverLimit ? '[&>div]:bg-red-500' : '[&>div]:bg-green-500'}`}
                />
                <div className="flex justify-between text-sm text-gray-600">
                  <span>₹{data.spent.toFixed(2)} spent</span>
                  <span>₹{data.limit.toFixed(2)} limit</span>
                </div>
              </div>
            ))}
          </div>
        ) : (
          <div className="text-center py-8">
            <Target className="w-12 h-12 text-gray-300 mx-auto mb-4" />
            <p className="text-gray-500 mb-2">No budget limits set</p>
            <p className="text-sm text-gray-400">Add budget limits to track spending by category</p>
          </div>
        )}
      </CardContent>
    </Card>
  );
}
